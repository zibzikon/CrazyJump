//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public HookingAnimationStartedListenerComponent hookingAnimationStartedListener { get { return (HookingAnimationStartedListenerComponent)GetComponent(GameComponentsLookup.HookingAnimationStartedListener); } }
    public bool hasHookingAnimationStartedListener { get { return HasComponent(GameComponentsLookup.HookingAnimationStartedListener); } }

    public void AddHookingAnimationStartedListener(System.Collections.Generic.List<IHookingAnimationStartedListener> newValue) {
        var index = GameComponentsLookup.HookingAnimationStartedListener;
        var component = (HookingAnimationStartedListenerComponent)CreateComponent(index, typeof(HookingAnimationStartedListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceHookingAnimationStartedListener(System.Collections.Generic.List<IHookingAnimationStartedListener> newValue) {
        var index = GameComponentsLookup.HookingAnimationStartedListener;
        var component = (HookingAnimationStartedListenerComponent)CreateComponent(index, typeof(HookingAnimationStartedListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveHookingAnimationStartedListener() {
        RemoveComponent(GameComponentsLookup.HookingAnimationStartedListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHookingAnimationStartedListener;

    public static Entitas.IMatcher<GameEntity> HookingAnimationStartedListener {
        get {
            if (_matcherHookingAnimationStartedListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.HookingAnimationStartedListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHookingAnimationStartedListener = matcher;
            }

            return _matcherHookingAnimationStartedListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddHookingAnimationStartedListener(IHookingAnimationStartedListener value) {
        var listeners = hasHookingAnimationStartedListener
            ? hookingAnimationStartedListener.value
            : new System.Collections.Generic.List<IHookingAnimationStartedListener>();
        listeners.Add(value);
        ReplaceHookingAnimationStartedListener(listeners);
    }

    public void RemoveHookingAnimationStartedListener(IHookingAnimationStartedListener value, bool removeComponentWhenEmpty = true) {
        var listeners = hookingAnimationStartedListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveHookingAnimationStartedListener();
        } else {
            ReplaceHookingAnimationStartedListener(listeners);
        }
    }
}
