//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Kernel.Components.Height height { get { return (Kernel.Components.Height)GetComponent(GameComponentsLookup.Height); } }
    public bool hasHeight { get { return HasComponent(GameComponentsLookup.Height); } }

    public void AddHeight(float newValue) {
        var index = GameComponentsLookup.Height;
        var component = (Kernel.Components.Height)CreateComponent(index, typeof(Kernel.Components.Height));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceHeight(float newValue) {
        var index = GameComponentsLookup.Height;
        var component = (Kernel.Components.Height)CreateComponent(index, typeof(Kernel.Components.Height));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveHeight() {
        RemoveComponent(GameComponentsLookup.Height);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHeight;

    public static Entitas.IMatcher<GameEntity> Height {
        get {
            if (_matcherHeight == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Height);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHeight = matcher;
            }

            return _matcherHeight;
        }
    }
}
