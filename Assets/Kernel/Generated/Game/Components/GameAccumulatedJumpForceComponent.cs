//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Kernel.Components.AccumulatedJumpForce accumulatedJumpForce { get { return (Kernel.Components.AccumulatedJumpForce)GetComponent(GameComponentsLookup.AccumulatedJumpForce); } }
    public bool hasAccumulatedJumpForce { get { return HasComponent(GameComponentsLookup.AccumulatedJumpForce); } }

    public void AddAccumulatedJumpForce(float newValue) {
        var index = GameComponentsLookup.AccumulatedJumpForce;
        var component = (Kernel.Components.AccumulatedJumpForce)CreateComponent(index, typeof(Kernel.Components.AccumulatedJumpForce));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAccumulatedJumpForce(float newValue) {
        var index = GameComponentsLookup.AccumulatedJumpForce;
        var component = (Kernel.Components.AccumulatedJumpForce)CreateComponent(index, typeof(Kernel.Components.AccumulatedJumpForce));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAccumulatedJumpForce() {
        RemoveComponent(GameComponentsLookup.AccumulatedJumpForce);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAccumulatedJumpForce;

    public static Entitas.IMatcher<GameEntity> AccumulatedJumpForce {
        get {
            if (_matcherAccumulatedJumpForce == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AccumulatedJumpForce);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAccumulatedJumpForce = matcher;
            }

            return _matcherAccumulatedJumpForce;
        }
    }
}
