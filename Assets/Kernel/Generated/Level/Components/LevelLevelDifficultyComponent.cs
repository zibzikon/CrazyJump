//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class LevelEntity {

    public Kernel.Components.LevelDifficulty levelDifficulty { get { return (Kernel.Components.LevelDifficulty)GetComponent(LevelComponentsLookup.LevelDifficulty); } }
    public bool hasLevelDifficulty { get { return HasComponent(LevelComponentsLookup.LevelDifficulty); } }

    public void AddLevelDifficulty(int newValue) {
        var index = LevelComponentsLookup.LevelDifficulty;
        var component = (Kernel.Components.LevelDifficulty)CreateComponent(index, typeof(Kernel.Components.LevelDifficulty));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceLevelDifficulty(int newValue) {
        var index = LevelComponentsLookup.LevelDifficulty;
        var component = (Kernel.Components.LevelDifficulty)CreateComponent(index, typeof(Kernel.Components.LevelDifficulty));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveLevelDifficulty() {
        RemoveComponent(LevelComponentsLookup.LevelDifficulty);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class LevelMatcher {

    static Entitas.IMatcher<LevelEntity> _matcherLevelDifficulty;

    public static Entitas.IMatcher<LevelEntity> LevelDifficulty {
        get {
            if (_matcherLevelDifficulty == null) {
                var matcher = (Entitas.Matcher<LevelEntity>)Entitas.Matcher<LevelEntity>.AllOf(LevelComponentsLookup.LevelDifficulty);
                matcher.componentNames = LevelComponentsLookup.componentNames;
                _matcherLevelDifficulty = matcher;
            }

            return _matcherLevelDifficulty;
        }
    }
}
